version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: ai-notes-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ai_notes
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ai-notes-network

  backend:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: ai-notes-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://mongodb:27017/ai_notes
      JWT_SECRET: ${JWT_SECRET}
      HF_API_KEY: ${HF_API_KEY}
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./server/logs:/app/logs
    networks:
      - ai-notes-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ai-notes-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - ai-notes-network

  nginx:
    image: nginx:alpine
    container_name: ai-notes-nginx
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - ai-notes-network

volumes:
  mongodb_data:

networks:
  ai-notes-network:
    driver: bridge